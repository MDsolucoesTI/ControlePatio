<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABh4eHJIaGhlKIiIhriIaGgYiGhpSKh4ehiYiIqYmHh7GKh4e7iYaGvImGhryKh4e9iYiIvomI
        iL6JiIi+iYiIvomIiL6JiIi+iYiIvomIiL6Jhoa8iYaGvIqHh7uJh4e3ioiIromHh6SJh4ebiIaGi4iG
        hnSIhYVciISEPm1tbQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABhYWFLImFhUWHhIRRh4eHZIeFhXmJh4eEiYaGjYmHh5eIiIifiYeHpomI
        iK+JiIiviYiIr4iHh7KJiIi6ioeHu4qHh7uJiIi2iYiIr4mIiK+JiIiviIeHrIqIiKOIiIiaiYaGkYmH
        h4aHh4d/hYODcUZFRdczMzPYdXV1SHR0dAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAkBA
        QARmZmYFZmZmBW1tbQdtbW0HbW1tB21tbQdgYGAIYGBgCGBgYAhgYGAIbW1tB21tbQdtbW0HbW1tB2Zm
        ZgVAQEAEVVVVAwAAAAEAAAAAJSUlbhgYGP8GBgb/AAAAuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDBbJCQk+g0NDf8EBAT/AQEB/wAAAAAAAAAAAAAAAAAA
        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
        3f9pZ93/XVva/1FP1/9EQdP/NjTQ/y0qzf8qJ8v/JiXI/yMixf89PcD/1NTe//Du7v/29PT/9/b2//n4
        +P/6+vr/+/r6//r6+v/6+Pj/+Pf3//f19f/18/P/8/Hx//Hv7//v7u7/kZKy/x4gvf8aHbr/Fxq2/xQY
        sv8QFLn/FBiE/3NyaP+4t7b/6+rp/4eHhv8hISHIAAAAAAAAAAAAAAAAAAAABGpqWJOqqcT/Y2PZ/4SF
        3f+Zl+n/j4zn/4OC4/94duH/bWve/2Ff3P9YVdr/SEXV/zo40v80MND/Mi/P/zEvzf+xsNT/5ePj//Tx
        8f/18/P/9/X1//j29v/59/f/+fn5//n4+P/49/f/9/b2//b09P/08vL/8/Dw//Hu7v/x7u7/5ubm/0hI
        vv8qK8L/IiS//x0fvP8WGbz/KSe8/2xrcf+gn5r/u7m5/5CQkP8pKSfDAAAAAAAAAAAAAAAAAAAAEAkJ
        BTeJiKnWoJ/o/7i38f+opuz/m5rp/5GQ5/+Jh+X/gH7j/3Jz2f9iZNH/W13R/0pLzf87O8r/NTTL/25s
        yv/j4eH/8e7u//Lw8P/08fH/9fPz//b09P/39vb/+Pb2//f29v/39fX/9vT0//Xy8v/z8fH/8u/v//Dt
        7f/v6+v/8e7u/6enw/9JSM//PDzK/zIyxf8lJsD/KynV/1xZlf+Eg3L/nZya/4OCgv8LCwnJAAAABAAA
        AAAAAAAAAAAAAJSJfkWvpqPLqqbM/8XF8v/GxfP/u7rx/6up7v+cmur/iojk/3Fy2P+CgeL/a2re/1lX
        2P9OTdT/QUHN/6Cgyv/m4+P/8O3t//Hv7//z8PD/9PLy//Xz8//29PT/9vT0//b09P/18/P/9PLy//Tx
        8f/y8PD/8e7u//Ds7P/u6ur/7ejo/+Lh4/9oZtv/XlzZ/1NS0/9ISM7/JyfJ/0I/1v9aWIL/Xl1P/yYl
        E/8AAiX/EBSqTgAAAAAAAAAA6OHRQ8C6s/WHhYT/iIiJ/7Cxwf/FxOP/wsHr/8PC8v+8u/L/sK7v/42L
        6P94d+D/cnHc/2pp3v9lYuD/ZGHh/76+xP/u6+v/7+zs//Ht7f/y7+//8/Dw//Px8f/08vL/9PLy//Ty
        8v/08fH/8/Hx//Lw8P/x7u7/8O3t/+/r6//t6en/7Ojo//Lw8P9sadD/ZWLq/2dl4f9kYdr/R0bS/yIk
        xf8qK8f/HiCD/wAGT/8GEJX/Hh7PjwAAAAAAAAAAurayyl9fX/+Mi4v/zMjF/97Y0//Y0Mn/ycC+/7ix
        wP+0r9D/tbPl/7a18P+mpO3/ioni/2xu1v9hY+L/bm7F/9va2v/s6en/7urq/+/s7P/w7e3/8u/v//Ty
        8v/18/P/9fPz//Xz8//18/P/9PLy//Pw8P/x7u7/7+vr/+3q6v/s6Oj/6+fn/+nn5/9laLD/NjWO/09M
        1v9cWOf/WVfa/1RS1f8sL77/Exuz/w8Zsv8ZGsP/Ih/IrwAAAADx8e5cr62r9bCvrf/r5uH/sq2o/2xn
        ZP9uaGP/Y15a/29tbP+urKr/lJGV/5qXqf+mocb/pqPc/5+d7f9TU4z/YGFn/9bV1f/r6en/7+zs//Pw
        8P/18/P/9vT0//f19f/39fX/9/X1//f19f/39fX/9/X1//b09P/18/P/9PLy//Pv7//v6+v/6ubm/+Lg
        4P93e7z/AAAC/x4cMf9HRaT/UlDb/09N3P9dW9r/ZmPc/2hm3f9JR9P/ODjMswAAAADl4t/B9/Pv/7+7
        tv80MjD/AAAA/wAAAP8FBAT/fndx/56bmf/b2tj/v768/7u6uv/IxMH/taie/7GorP+KiID/q6uj/9HQ
        0P/y8fH/9fT0//Xz8//29PT/9vT0//b19f/39fX/9/X1//f19f/39fX/9vT0//b09P/28/P/9fPz//Ty
        8v/08vL/8fDw/+Lg4P+DhKv/GBgU/z09N/8JCQD/HR06/09Ovf9bWdz/dXPe/42L5P9+feD/VlPJXwAA
        AAHv7OujysXB/xYUEv8AAAD/PTo3/3hxav+flo3/v7Wp/7esof+wppr/rqOX/6uekv+nmo7/qZyQ/6uf
        kv+qoa3/hoe4/9DPz//z8fH/9fT0//b19f/29PT/9vT0//f19f/39fX/9/X1//f19f/39fX/9/X1//b0
        9P/29PT/9fPz//Xz8//08/P/8fDw/+Hf3/93don/NjYs/xcYEf8AAAD/BgYC/1pZnv9vbeb/g4Lg/5GP
        4/9iYqCrBQUFMQAAAA/g2tMpe3t635COi/+LhH3/0Me+/9zVzf/a1M3/1M3H/9HKxP/MxL3/x763/8C2
        rv+5rqX/tKmf/66il/+kl4//eXG0/8fGxv/x8PD/9PPz//f19f/39vb/+Pf3//f19f/39fX/9/X1//f1
        9f/39fX/9/X1//b09P/29PT/9vT0//b19f/08vL/8O/v/+Pi4v9ISHH/MzMn/xcWNf8gH3j/Oji+/1dV
        2/9vbtn/dXW5/zIyTd0AAABHCAgIIQAAAAkAAAAAYmVoU8jEwf/d1c7/5eLe/+bh3v/g3Nf/3dfT/9nT
        z//Uzsn/0MjD/8vCu//FvLX/wrmx/8G4sP/Atq7/ua+m/5ubmv/q6en/8/Ly//X19f/5+Pj//Pz8//z8
        /P/39fX/9/b2//f19f/39fX/9/X1//f19f/49vb/9/b2//X09P/z8vL/7+7u/+fm5/9GRlH/X113/0E9
        wf9GQMr/SkSs/z09dP+Skaj/pKOj/1NSUv8AAABAAAAAAAAAAAAAAAAAAAAAAL+7tYDp5uL/8e/t/+3q
        6P/o5eL/5ODc/+Hc2P/d2NT/2tTP/9bPyf/QycP/zMS+/8rCuv/Mw7z/0cjA/8XBv//JyMj/8vHx//X0
        9P/5+fn/+/v7//z8/P/5+fn/+fj4//n4+P/5+Pj/+fj4//j39//39/f/9vX1//Tz8//y8fH/6Ofn/9zZ
        1/+roZn/s6ih/7Onnf+0p5z/mYyB/0VEQ/+pqan/5uXk/3R0dP8QDhBvAAAAAAAAAAAAAAAAAAAAAAAA
        AADj49xI7Onmu/Dt6/3w7uz/7+zr/+vo5v/m49//4t7Z/97Z1v/b1dD/4NnU/97W0P+6sq3/h4F8/4mG
        g/+xsbH/8vHx//Tz8//39/f/+vr6//r6+v/5+Pj/+fj4//n5+f/5+Pj/+Pj4//j39//39vb/9fT0//Pz
        8//x8PD/3Nvb/8zGwf/BubH/vLKp/7itpP+2qqH/uKug/2FdWv+Dg4P/t7a2/4SEg/8FBQVlAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAODa2ino4+F46+jmyO3q6Pzt6+n/7Onm/+rn4//o5N//rKai/0pH
        RP8XFBH/FBAK/wAAAP+Ghob/paWl//Tz8//19PT/9vb2//f39//4+Pj/+fj4//n4+P/4+Pj/+Pf3//f3
        9//29fX/9fT0//Py8v/j4uL/5OLh/9bRz//Szcr/zcfD/8jAuv/DubL/vbKo/6adlf9hYWH/g4OD/0NE
        RP8eGxd5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANra0iLj3tlk5uHerOPf
        2+yRj43/MS8u/zQxKv9FPzT/Qzsv/yEdFv82NTL/pqal/83MzP/19fX/9vb2//f39//4+Pj/+Pj4//n4
        +P/4+Pj/+Pf3//f39//29vb/9fT0/+fn5//Kycn/wru2/9zV0f/h29f/29bU/9bS0P/Tzsv/y8S//7+y
        qf+kmZD/SkZD/0A7Nf+hlYrPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ+VlRicl5LbpqKd/42Igf90b2f/YlxU/1VPRP9JQjf/X1lP/6inpv+urq7/9/f3//j3
        9//4+Pj/+fj4//n5+f/5+Pj/+Pj4//j39//49/f/2djY/7S0tP8iIiD/GhkW/0xIRf+Ign3/vbaw/9vU
        z//g29f/2dXT/9LNyv+/tKv/tKeb/7OlmP+0qJ7tqpycEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfkICXysS+/8nGwv+ysKz/n5yW/42Jg/93cmv/YVxU/25p
        Yv+op6b/lJSU/9ra2v/7+/v/+vr6//r6+v/6+vr/+/v7/+bm5v+7urr/vLy7/zU1NP8ICAb/AgMB/wAA
        AP8AAAD/EA4N/0E+O/9/enX/ysS//9fS0P/a19X/2dbT/8zFwf+yppzytKWWEQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8BvrSqM8jDvM/Qzcn/wsC8/7Wz
        r/+vrKj/pKGd/5aTjv+Ef3n/lZKO/6+urf+ioqL/kZCQ/42Njf+Yl5f/r6+v/66urf9jYmD/aWVh/wAA
        AP8GBgX/BgYF/wUFBf8FBQX/AQEB/wAAAP80MzP/xLu0/7uxqP/Du7X/zsjD/8zFwf+1qaCGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmI
        dw/Jwru11tPO/83Kx/+7ubb/sa+r/6mmov+gnZn/oJyZ/7SwrP/Pysf/2dXS/9HNyv+wran/c29s/yMh
        IP8VFRP/XVlW/wAAAP8AAAD/AwID/wQDA/8DAwP/AAAA/zEwMf/Cu7b/uKuh/7Glm/+zp53/taqg8rSp
        n3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAx8G5e9HMxvPMxsL/x8K9/83IxP/a1tL/5+Pg/+zo5v/m4uD/49/c/+Pe
        2v/j3dj/4NjS/87GwP+xq6b/nZeT/0JAPv8cHBz/BAUF/wAAAP8AAAD/R0ZF/8C5s/y6rqP6saWb5rOn
        ncCxppx5qpmRHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK+flyDFvLh208zIvt7a1+7o5OP/7Orp/+zq
        6f/r6Of/6ebj/+bj4P/j39z/4NvX/+Hc2P/o4t//6OPf/+rk4f/Tzsv/trGu/5iVlP+hnp3/4t7cdOvg
        zBmflYoYqqqVDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzM
        zBTe2dU94N7cdOTh35/i393N4t/c5OHd2fff2tf/3tnV/93Y1P/f2tf/39vY/9/b1//g2tf04dzZ2+3m
        4qD///85AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MnDJsvGwFnNxb+AzsjAqs3GwbnRycO40svGps7H
        wXzPxcJPz7+/EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//gAAAAD////+AAAAAP/////4AAAh
        /////////8H////+A///gf///8AAf/8B///8AAAP/gP//+AAAAH8B///wAAAAHgP///AAAAAAB///+AA
        AAAAP///wAAAAAB///+AAAAAAA///4AAAAAAAf//gAAAAAAA//+AAAAAAAH//4AAAAAAA///gAAAAAAD
        //+AAAAAAAP//4AAAAAAAf//wAAAAAAB//+AAAAAAAH//4AAAAAAAf//AAAAAAAB//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//+AAAAAAAP//8AAAAAAA///4AAAAAAD///4AAAAAAP///8AAAAAA////+AAAAAB
        ////8AAAAAH////wAAAAA/////wAAAAH/////wAAAA//////gAAAf//////wAAf///////+AH///////
        ////////////////////////////////////////////////////////////////////////////////
        //8=
</value>
  </data>
</root>